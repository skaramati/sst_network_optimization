# Makefile.in generated by automake 1.13.4 from Makefile.am.
# src/sst/elements/memHierarchy/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Makefile -*-
#
#



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/sst-elements-library
pkgincludedir = $(includedir)/sst-elements-library
pkglibdir = $(libdir)/sst-elements-library
pkglibexecdir = $(libexecdir)/sst-elements-library
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = $(RAMULATOR_LDFLAGS)
#am__append_2 = $(RAMULATOR_LIB)
#am__append_3 = membackend/ramulatorBackend.cc \
#	membackend/ramulatorBackend.h

#am__append_4 = membackend/ramulatorBackend.h
#am__append_5 = $(RAMULATOR_CPPFLAGS) -DHAVE_LIBRAMULATOR
#am__append_6 = $(DRAMSIM_LDFLAGS)
#am__append_7 = $(DRAMSIM_LIB)
#am__append_8 = membackend/dramSimBackend.cc \
#	membackend/dramSimBackend.h \
#	membackend/pagedMultiBackend.cc \
#	membackend/pagedMultiBackend.h
#am__append_9 = membackend/dramSimBackend.h \
#	membackend/pagedMultiBackend.h
#am__append_10 = $(DRAMSIM_CPPFLAGS) -DHAVE_LIBDRAMSIM
#am__append_11 = $(HYBRIDSIM_LDFLAGS)
#am__append_12 = $(HYBRIDSIM_LIB)
#am__append_13 = membackend/hybridSimBackend.cc \
#	membackend/hybridSimBackend.h

#am__append_14 = membackend/hybridSimBackend.h
#am__append_15 = $(HYBRIDSIM_CPPFLAGS) -DHAVE_LIBHYBRIDSIM
#am__append_16 = $(LIBZ_LDFLAGS)
#am__append_17 = $(LIBZ_LIB)
#am__append_18 = $(LIBZ_CPPFLAGS)
#am__append_19 = \
#	membackend/goblinHMCBackend.cc \
#	membackend/goblinHMCBackend.h

#am__append_20 = membackend/goblinHMCBackend.h
#am__append_21 = $(GOBLIN_HMCSIM_LDFLAGS)
#am__append_22 = $(GOBLIN_HMCSIM_LIB)
#am__append_23 = $(GOBLIN_HMCSIM_CPPFLAGS) -DHAVE_GOBLIN_HMCSIM
#am__append_24 = \
#	membackend/flashSimBackend.cc \
#	membackend/flashSimBackend.h

#am__append_25 = $(FDSIM_LDFLAGS)
#am__append_26 = $(FDSIM_LIB)
#am__append_27 = $(FDSIM_CPPFLAGS) $(FDSIM_CXXFLAGS) -DHAVE_LIBFDSIM
subdir = src/sst/elements/memHierarchy
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/depcomp $(am__nobase_sst_HEADERS_DIST)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/argz.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/ltdl.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/sst-check_picky.m4 \
	$(top_srcdir)/config/sst_check_dramsim.m4 \
	$(top_srcdir)/config/sst_check_dumpi.m4 \
	$(top_srcdir)/config/sst_check_fdsim.m4 \
	$(top_srcdir)/config/sst_check_glpk.m4 \
	$(top_srcdir)/config/sst_check_goblin_hmcsim.m4 \
	$(top_srcdir)/config/sst_check_hybridsim.m4 \
	$(top_srcdir)/config/sst_check_libphx.m4 \
	$(top_srcdir)/config/sst_check_libz.m4 \
	$(top_srcdir)/config/sst_check_metis.m4 \
	$(top_srcdir)/config/sst_check_micron_hmcsim.m4 \
	$(top_srcdir)/config/sst_check_nvdimmsim.m4 \
	$(top_srcdir)/config/sst_check_otf.m4 \
	$(top_srcdir)/config/sst_check_pintool.m4 \
	$(top_srcdir)/config/sst_check_ptrace_set_tracer.m4 \
	$(top_srcdir)/config/sst_check_ramulator.m4 \
	$(top_srcdir)/config/sst_check_shm.m4 \
	$(top_srcdir)/config/sst_check_systemc.m4 \
	$(top_srcdir)/config/sst_core_check_install.m4 \
	$(top_srcdir)/config/sst_elements_config_output.m4 \
	$(top_srcdir)/config/sst_os_check_osx.m4 \
	$(top_srcdir)/config/sst_elements_include.m4 \
	$(top_srcdir)/src/sst/elements/ariel/configure.m4 \
	$(top_srcdir)/src/sst/elements/CramSim/configure.m4 \
	$(top_srcdir)/src/sst/elements/ember/configure.m4 \
	$(top_srcdir)/src/sst/elements/HMC/configure.m4 \
	$(top_srcdir)/src/sst/elements/memHierarchy/configure.m4 \
	$(top_srcdir)/src/sst/elements/Messier/configure.m4 \
	$(top_srcdir)/src/sst/elements/prospero/configure.m4 \
	$(top_srcdir)/src/sst/elements/Samba/configure.m4 \
	$(top_srcdir)/src/sst/elements/scheduler/configure.m4 \
	$(top_srcdir)/src/sst/elements/SysC/configure.m4 \
	$(top_srcdir)/src/sst/elements/VaultSimC/configure.m4 \
	$(top_srcdir)/src/sst/elements/zodiac/configure.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/sst_element_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(compdir)" "$(DESTDIR)$(sstdir)"
LTLIBRARIES = $(comp_LTLIBRARIES)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
libmemHierarchy_la_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7)
am__libmemHierarchy_la_SOURCES_DIST = hash.h cacheListener.h \
	cacheController.h cacheEventProcessing.cc cacheController.cc \
	cacheFactory.cc replacementManager.h bus.h bus.cc \
	memoryController.h memoryController.cc \
	membackend/timingDRAMBackend.cc membackend/timingDRAMBackend.h \
	membackend/timingAddrMapper.h membackend/timingPagePolicy.h \
	membackend/timingTransaction.h membackend/backing.h \
	membackend/memBackend.h membackend/memBackendConvertor.h \
	membackend/memBackendConvertor.cc \
	membackend/simpleMemBackendConvertor.h \
	membackend/simpleMemBackendConvertor.cc \
	membackend/hmcMemBackendConvertor.h \
	membackend/hmcMemBackendConvertor.cc membackend/delayBuffer.h \
	membackend/delayBuffer.cc membackend/simpleMemBackend.h \
	membackend/simpleMemBackend.cc membackend/simpleDRAMBackend.h \
	membackend/simpleDRAMBackend.cc \
	membackend/requestReorderSimple.h \
	membackend/requestReorderSimple.cc \
	membackend/requestReorderByRow.h \
	membackend/requestReorderByRow.cc membackend/vaultSimBackend.h \
	membackend/vaultSimBackend.cc membackend/MessierBackend.h \
	membackend/MessierBackend.cc \
	membackend/scratchBackendConvertor.h \
	membackend/scratchBackendConvertor.cc \
	membackend/simpleMemScratchBackendConvertor.h \
	membackend/simpleMemScratchBackendConvertor.cc \
	membackend/cramSimBackend.h membackend/cramSimBackend.cc \
	memEvent.h scratchEvent.h memNIC.h memNIC.cc \
	directoryController.h directoryController.cc scratchpad.h \
	scratchpad.cc coherenceController.h coherenceController.cc \
	memHierarchyInterface.cc memHierarchyInterface.h \
	memHierarchyScratchInterface.cc memHierarchyScratchInterface.h \
	MESIInternalDirectory.h MESIInternalDirectory.cc \
	MESICoherenceController.h MESICoherenceController.cc \
	IncoherentController.h IncoherentController.cc \
	L1IncoherentController.h L1IncoherentController.cc \
	L1CoherenceController.h L1CoherenceController.cc \
	multithreadL1Shim.h multithreadL1Shim.cc cacheArray.cc \
	cacheArray.h mshr.h mshr.cc trivialCPU.h trivialCPU.cc \
	streamCPU.h streamCPU.cc scratchCPU.h scratchCPU.cc util.h \
	dmaEngine.h dmaEngine.cc networkMemInspector.h \
	networkMemInspector.cc memResponseHandler.h \
	Sieve/sieveController.h Sieve/sieveController.cc \
	Sieve/sieveFactory.cc Sieve/broadcastShim.h \
	Sieve/broadcastShim.cc memNetBridge.h memNetBridge.cc \
	libmemHierarchy.cc membackend/ramulatorBackend.cc \
	membackend/ramulatorBackend.h membackend/dramSimBackend.cc \
	membackend/dramSimBackend.h membackend/pagedMultiBackend.cc \
	membackend/pagedMultiBackend.h membackend/hybridSimBackend.cc \
	membackend/hybridSimBackend.h membackend/goblinHMCBackend.cc \
	membackend/goblinHMCBackend.h membackend/flashSimBackend.cc \
	membackend/flashSimBackend.h
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = membackend/ramulatorBackend.lo
#am__objects_2 = membackend/dramSimBackend.lo \
#	membackend/pagedMultiBackend.lo
#am__objects_3 = membackend/hybridSimBackend.lo
#am__objects_4 =  \
#	membackend/goblinHMCBackend.lo
#am__objects_5 = membackend/flashSimBackend.lo
am_libmemHierarchy_la_OBJECTS = cacheEventProcessing.lo \
	cacheController.lo cacheFactory.lo bus.lo memoryController.lo \
	membackend/timingDRAMBackend.lo \
	membackend/memBackendConvertor.lo \
	membackend/simpleMemBackendConvertor.lo \
	membackend/hmcMemBackendConvertor.lo membackend/delayBuffer.lo \
	membackend/simpleMemBackend.lo membackend/simpleDRAMBackend.lo \
	membackend/requestReorderSimple.lo \
	membackend/requestReorderByRow.lo \
	membackend/vaultSimBackend.lo membackend/MessierBackend.lo \
	membackend/scratchBackendConvertor.lo \
	membackend/simpleMemScratchBackendConvertor.lo \
	membackend/cramSimBackend.lo memNIC.lo directoryController.lo \
	scratchpad.lo coherenceController.lo memHierarchyInterface.lo \
	memHierarchyScratchInterface.lo MESIInternalDirectory.lo \
	MESICoherenceController.lo IncoherentController.lo \
	L1IncoherentController.lo L1CoherenceController.lo \
	multithreadL1Shim.lo cacheArray.lo mshr.lo trivialCPU.lo \
	streamCPU.lo scratchCPU.lo dmaEngine.lo networkMemInspector.lo \
	Sieve/sieveController.lo Sieve/sieveFactory.lo \
	Sieve/broadcastShim.lo memNetBridge.lo libmemHierarchy.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5)
libmemHierarchy_la_OBJECTS = $(am_libmemHierarchy_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libmemHierarchy_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libmemHierarchy_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libmemHierarchy_la_SOURCES)
DIST_SOURCES = $(am__libmemHierarchy_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__nobase_sst_HEADERS_DIST = memEvent.h memNIC.h \
	membackend/memBackend.h membackend/vaultSimBackend.h \
	membackend/MessierBackend.h membackend/simpleMemBackend.h \
	membackend/simpleDRAMBackend.h \
	membackend/requestReorderSimple.h \
	membackend/requestReorderByRow.h membackend/delayBuffer.h \
	memoryController.h cacheListener.h bus.h util.h \
	membackend/ramulatorBackend.h membackend/dramSimBackend.h \
	membackend/pagedMultiBackend.h membackend/hybridSimBackend.h \
	membackend/goblinHMCBackend.h
HEADERS = $(nobase_sst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/karamati/scratch/src/sst-elements-library-7.1.0/config/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARGZ_H = 
AUTOCONF = ${SHELL} /home/karamati/scratch/src/sst-elements-library-7.1.0/config/missing autoconf
AUTOHEADER = ${SHELL} /home/karamati/scratch/src/sst-elements-library-7.1.0/config/missing autoheader
AUTOMAKE = ${SHELL} /home/karamati/scratch/src/sst-elements-library-7.1.0/config/missing automake-1.13
AWK = gawk
BOOST_LIB_SUFFIX = 
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CC_VERSION = gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CFLAGS = -g -O2  
CPP = gcc -std=gnu99 -E
CPPFLAGS =   -I/usr/include/python2.7 -I/usr/include/python2.7  -I/home/karamati/local/sstcore-7.1.0/include/sst/core -I/home/karamati/local/sstcore-7.1.0/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2  -std=c++1y -D__STDC_FORMAT_MACROS 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DRAMSIM_CPPFLAGS = 
DRAMSIM_LDFLAGS = 
DRAMSIM_LIB = 
DRAMSIM_LIBDIR = 
DSYMUTIL = 
DUMPBIN = 
DUMPI_CPPFLAGS = 
DUMPI_LDFLAGS = 
DUMPI_LIB = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FDSIM_CPPFLAGS = 
FDSIM_CXXFLAGS = 
FDSIM_LDFLAGS = 
FDSIM_LIB = 
FDSIM_LIBDIR = 
FGREP = /usr/bin/grep -F
GLPK_CPPFLAGS = 
GLPK_LDFLAGS = 
GLPK_LIB = 
GLPK_LIBDIR = 
GOBLIN_HMCSIM_CPPFLAGS = 
GOBLIN_HMCSIM_LDFLAGS = 
GOBLIN_HMCSIM_LIB = 
GOBLIN_HMCSIM_LIBDIR = 
GREP = /usr/bin/grep
HAVE_SET_PTRACER = 1
HYBRIDSIM_CPPFLAGS = 
HYBRIDSIM_LDFLAGS = 
HYBRIDSIM_LIB = 
HYBRIDSIM_LIBDIR = 
INCLTDL = -I${top_srcdir}/src/libltdl
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =    -lpthread -ldl -lutil -lm -lpython2.7 -Xlinker -export-dynamic
LIBADD_DL = -ldl 
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = -ldl
LIBADD_SHL_LOAD = 
LIBLTDL = ${top_build_prefix}src/libltdl/libltdlc.la
LIBOBJS = 
LIBPHX_CPPFLAGS = 
LIBPHX_LDFLAGS = 
LIBPHX_LIB = 
LIBPHX_LIBDIR = 
LIBS = -ldl   -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBZ_CPPFLAGS = 
LIBZ_LDFLAGS = 
LIBZ_LIB = 
LIPO = 
LN_S = ln -s
LTDLDEPS = ${top_build_prefix}src/libltdl/libltdlc.la
LTDLINCL = -I${top_srcdir}/src/libltdl
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = src/sst_element_config.h
LT_DLLOADERS =  dlopen.la
LT_DLPREOPEN = -dlpreopen dlopen.la 
MAKEINFO = ${SHELL} /home/karamati/scratch/src/sst-elements-library-7.1.0/config/missing makeinfo
MANIFEST_TOOL = :
METIS_CPPFLAGS = 
METIS_LDFLAGS = 
METIS_LIB = 
METIS_LIBDIR = 
MICRON_HMCSIM_CPPFLAGS =   -I/usr/include/python2.7 -I/usr/include/python2.7  -I/home/karamati/local/sstcore-7.1.0/include/sst/core -I/home/karamati/local/sstcore-7.1.0/include 
MICRON_HMCSIM_LDFLAGS =    -lpthread -ldl -lutil -lm -lpython2.7 -Xlinker -export-dynamic  -L
MICRON_HMCSIM_LIBDIR = 
MICRON_HMCSIM_LIBS = -lhmcsim 
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NVDIMMSIM_CPPFLAGS = 
NVDIMMSIM_CXXFLAGS = 
NVDIMMSIM_LDFLAGS = 
NVDIMMSIM_LIB = 
NVDIMMSIM_LIBDIR = 
OBJDUMP = objdump
OBJEXT = o
OTF_CONFIG_TOOL = 
OTF_CPPFLAGS = 
OTF_LDFLAGS = 
OTF_PATH = 
OTOOL = 
OTOOL64 = 
PACKAGE = sst-elements-library
PACKAGE_BUGREPORT = sst@sandia.gov
PACKAGE_NAME = SST Elements Library
PACKAGE_STRING = SST Elements Library 7.1.0
PACKAGE_TARNAME = sst-elements-library
PACKAGE_URL = 
PACKAGE_VERSION = 7.1.0
PATH_SEPARATOR = :
PINTOOL_CPPFLAGS =  -DPINTOOL_EXECUTABLE=""""
PINTOOL_DIR = 
PINTOOL_LDFLAGS = 
PINTOOL_PATH = /home/karamati/local/sstcore-7.1.0/bin:/home/karamati/local/packages/OpenMPI-1.8.8/bin:/home/karamati/local/sstelements-7.1.0/bin:/home/karamati/local/sstcore-7.1.0/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/karamati/.local/bin:/home/karamati/bin
PINTOOL_RUNTIME = 
RAMULATOR_CPPFLAGS = 
RAMULATOR_LDFLAGS = 
RAMULATOR_LIB = 
RAMULATOR_LIBDIR = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHM_LIB = -lrt -ldl   -ldl 
SSTELEMENTS_GIT_BRANCH = N/A
SSTELEMENTS_GIT_COMMITCOUNT = 0
SSTELEMENTS_GIT_HEADSHA = 7.1.0
SST_ACTIVE_ELEMENT_LIBRARIES =  cacheTracer cassini CramSim ember firefly hermes memHierarchy merlin Messier miranda prospero Samba scheduler simpleElementExample simpleSimulation thornhill VaultSimC zodiac
SST_CONFIG_TOOL = /home/karamati/local/sstcore-7.1.0/bin/sst-config
SST_DIST_ELEMENT_LIBRARIES =  ariel cacheTracer cassini CramSim ember firefly hermes HMC memHierarchy merlin Messier miranda prospero Samba scheduler simpleElementExample simpleSimulation SysC thornhill VaultSimC zodiac
SST_PREFIX = /home/karamati/local/sstcore-7.1.0
SST_REGISTER_TOOL = /home/karamati/local/sstcore-7.1.0/bin/sst-register
SST_SYSTEMC_CPPFLAGS = 
SST_SYSTEMC_LDFLAGS = 
SST_SYSTEMC_LIB = 
SST_SYSTEMC_LIBDIR = 
STRIP = strip
VERSION = 7.1.0
abs_builddir = /home/karamati/scratch/src/sst-elements-library-7.1.0/src/sst/elements/memHierarchy
abs_srcdir = /home/karamati/scratch/src/sst-elements-library-7.1.0/src/sst/elements/memHierarchy
abs_top_builddir = /home/karamati/scratch/src/sst-elements-library-7.1.0
abs_top_srcdir = /home/karamati/scratch/src/sst-elements-library-7.1.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/karamati/scratch/src/sst-elements-library-7.1.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
ltdl_LIBOBJS =  lt__strl.o
ltdl_LTLIBOBJS =  lt__strl.lo
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/karamati/local/sstelements-7.1.0
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sys_symbol_underscore = no
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../../
top_builddir = ../../../..
top_srcdir = ../../../..
AM_CPPFLAGS = $(MPI_CPPFLAGS) -I$(top_srcdir)/src $(am__append_5) \
	$(am__append_10) $(am__append_15) $(am__append_18) \
	$(am__append_23) $(am__append_27) $(HMC_FLAG)
compdir = $(pkglibdir)
comp_LTLIBRARIES = libmemHierarchy.la
libmemHierarchy_la_SOURCES = hash.h cacheListener.h cacheController.h \
	cacheEventProcessing.cc cacheController.cc cacheFactory.cc \
	replacementManager.h bus.h bus.cc memoryController.h \
	memoryController.cc membackend/timingDRAMBackend.cc \
	membackend/timingDRAMBackend.h membackend/timingAddrMapper.h \
	membackend/timingPagePolicy.h membackend/timingTransaction.h \
	membackend/backing.h membackend/memBackend.h \
	membackend/memBackendConvertor.h \
	membackend/memBackendConvertor.cc \
	membackend/simpleMemBackendConvertor.h \
	membackend/simpleMemBackendConvertor.cc \
	membackend/hmcMemBackendConvertor.h \
	membackend/hmcMemBackendConvertor.cc membackend/delayBuffer.h \
	membackend/delayBuffer.cc membackend/simpleMemBackend.h \
	membackend/simpleMemBackend.cc membackend/simpleDRAMBackend.h \
	membackend/simpleDRAMBackend.cc \
	membackend/requestReorderSimple.h \
	membackend/requestReorderSimple.cc \
	membackend/requestReorderByRow.h \
	membackend/requestReorderByRow.cc membackend/vaultSimBackend.h \
	membackend/vaultSimBackend.cc membackend/MessierBackend.h \
	membackend/MessierBackend.cc \
	membackend/scratchBackendConvertor.h \
	membackend/scratchBackendConvertor.cc \
	membackend/simpleMemScratchBackendConvertor.h \
	membackend/simpleMemScratchBackendConvertor.cc \
	membackend/cramSimBackend.h membackend/cramSimBackend.cc \
	memEvent.h scratchEvent.h memNIC.h memNIC.cc \
	directoryController.h directoryController.cc scratchpad.h \
	scratchpad.cc coherenceController.h coherenceController.cc \
	memHierarchyInterface.cc memHierarchyInterface.h \
	memHierarchyScratchInterface.cc memHierarchyScratchInterface.h \
	MESIInternalDirectory.h MESIInternalDirectory.cc \
	MESICoherenceController.h MESICoherenceController.cc \
	IncoherentController.h IncoherentController.cc \
	L1IncoherentController.h L1IncoherentController.cc \
	L1CoherenceController.h L1CoherenceController.cc \
	multithreadL1Shim.h multithreadL1Shim.cc cacheArray.cc \
	cacheArray.h mshr.h mshr.cc trivialCPU.h trivialCPU.cc \
	streamCPU.h streamCPU.cc scratchCPU.h scratchCPU.cc util.h \
	dmaEngine.h dmaEngine.cc networkMemInspector.h \
	networkMemInspector.cc memResponseHandler.h \
	Sieve/sieveController.h Sieve/sieveController.cc \
	Sieve/sieveFactory.cc Sieve/broadcastShim.h \
	Sieve/broadcastShim.cc memNetBridge.h memNetBridge.cc \
	libmemHierarchy.cc $(am__append_3) $(am__append_8) \
	$(am__append_13) $(am__append_19) $(am__append_24)
EXTRA_DIST = \
        Sieve/tests/StatisticOutput.csv.gold \
        Sieve/tests/sieveprospero-0.trace \
        Sieve/tests/trace-text.py \
        Sieve/tests/Makefile \
        Sieve/tests/ompsievetest.c \
        Sieve/tests/sieve-test.py \
	tests/example.py \
	tests/sdl-1.py \
	tests/sdl2-1.py \
	tests/sdl-2.py \
	tests/sdl3-1.py \
	tests/sdl3-2.py \
	tests/sdl3-3.py \
	tests/sdl-3.py \
	tests/sdl4-1.py \
	tests/sdl4-2.py \
	tests/sdl5-1.py \
	tests/sdl8-1.py \
	tests/sdl8-3.py \
	tests/sdl8-4.py \
	tests/sdl9-1.py \
	tests/sdl9-2.py \
	tests/testBackendChaining.py \
	tests/testBackendDelayBuffer.py \
	tests/testBackendPagedMulti.py \
	tests/testBackendReorderRow.py \
	tests/testBackendReorderSimple.py \
	tests/testBackendSimpleDRAM-1.py \
	tests/testBackendSimpleDRAM-2.py \
	tests/testBackendVaultSim.py \
	tests/testDistributedCaches.py \
	tests/testFlushes.py \
	tests/testFlushes-2.py \
	tests/testHashXor.py \
	tests/testIncoherent.py \
	tests/testNoninclusive-1.py \
	tests/testNoninclusive-2.py \
	tests/testPrefetchParams.py \
	tests/testThroughputThrottling.py \
	tests/testScratchDirect.py \
	tests/testScratchNetwork.py \
	tests/DDR3_micron_32M_8B_x4_sg125.ini \
	tests/system.ini

sstdir = $(includedir)/sst/elements/memHierarchy
nobase_sst_HEADERS = memEvent.h memNIC.h membackend/memBackend.h \
	membackend/vaultSimBackend.h membackend/MessierBackend.h \
	membackend/simpleMemBackend.h membackend/simpleDRAMBackend.h \
	membackend/requestReorderSimple.h \
	membackend/requestReorderByRow.h membackend/delayBuffer.h \
	memoryController.h cacheListener.h bus.h util.h \
	$(am__append_4) $(am__append_9) $(am__append_14) \
	$(am__append_20)
libmemHierarchy_la_LDFLAGS = -module -avoid-version $(am__append_1) \
	$(am__append_6) $(am__append_11) $(am__append_16) \
	$(am__append_21) $(am__append_25)
libmemHierarchy_la_LIBADD = $(am__append_2) $(am__append_7) \
	$(am__append_12) $(am__append_17) $(am__append_22) \
	$(am__append_26)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/sst/elements/memHierarchy/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/sst/elements/memHierarchy/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-compLTLIBRARIES: $(comp_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(comp_LTLIBRARIES)'; test -n "$(compdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(compdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(compdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(compdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(compdir)"; \
	}

uninstall-compLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(comp_LTLIBRARIES)'; test -n "$(compdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(compdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(compdir)/$$f"; \
	done

clean-compLTLIBRARIES:
	-test -z "$(comp_LTLIBRARIES)" || rm -f $(comp_LTLIBRARIES)
	@list='$(comp_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
membackend/$(am__dirstamp):
	@$(MKDIR_P) membackend
	@: > membackend/$(am__dirstamp)
membackend/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) membackend/$(DEPDIR)
	@: > membackend/$(DEPDIR)/$(am__dirstamp)
membackend/timingDRAMBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/memBackendConvertor.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/simpleMemBackendConvertor.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/hmcMemBackendConvertor.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/delayBuffer.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/simpleMemBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/simpleDRAMBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/requestReorderSimple.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/requestReorderByRow.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/vaultSimBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/MessierBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/scratchBackendConvertor.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/simpleMemScratchBackendConvertor.lo:  \
	membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/cramSimBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
Sieve/$(am__dirstamp):
	@$(MKDIR_P) Sieve
	@: > Sieve/$(am__dirstamp)
Sieve/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) Sieve/$(DEPDIR)
	@: > Sieve/$(DEPDIR)/$(am__dirstamp)
Sieve/sieveController.lo: Sieve/$(am__dirstamp) \
	Sieve/$(DEPDIR)/$(am__dirstamp)
Sieve/sieveFactory.lo: Sieve/$(am__dirstamp) \
	Sieve/$(DEPDIR)/$(am__dirstamp)
Sieve/broadcastShim.lo: Sieve/$(am__dirstamp) \
	Sieve/$(DEPDIR)/$(am__dirstamp)
membackend/ramulatorBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/dramSimBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/pagedMultiBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/hybridSimBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/goblinHMCBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)
membackend/flashSimBackend.lo: membackend/$(am__dirstamp) \
	membackend/$(DEPDIR)/$(am__dirstamp)

libmemHierarchy.la: $(libmemHierarchy_la_OBJECTS) $(libmemHierarchy_la_DEPENDENCIES) $(EXTRA_libmemHierarchy_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libmemHierarchy_la_LINK) -rpath $(compdir) $(libmemHierarchy_la_OBJECTS) $(libmemHierarchy_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f Sieve/*.$(OBJEXT)
	-rm -f Sieve/*.lo
	-rm -f membackend/*.$(OBJEXT)
	-rm -f membackend/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/IncoherentController.Plo
include ./$(DEPDIR)/L1CoherenceController.Plo
include ./$(DEPDIR)/L1IncoherentController.Plo
include ./$(DEPDIR)/MESICoherenceController.Plo
include ./$(DEPDIR)/MESIInternalDirectory.Plo
include ./$(DEPDIR)/bus.Plo
include ./$(DEPDIR)/cacheArray.Plo
include ./$(DEPDIR)/cacheController.Plo
include ./$(DEPDIR)/cacheEventProcessing.Plo
include ./$(DEPDIR)/cacheFactory.Plo
include ./$(DEPDIR)/coherenceController.Plo
include ./$(DEPDIR)/directoryController.Plo
include ./$(DEPDIR)/dmaEngine.Plo
include ./$(DEPDIR)/libmemHierarchy.Plo
include ./$(DEPDIR)/memHierarchyInterface.Plo
include ./$(DEPDIR)/memHierarchyScratchInterface.Plo
include ./$(DEPDIR)/memNIC.Plo
include ./$(DEPDIR)/memNetBridge.Plo
include ./$(DEPDIR)/memoryController.Plo
include ./$(DEPDIR)/mshr.Plo
include ./$(DEPDIR)/multithreadL1Shim.Plo
include ./$(DEPDIR)/networkMemInspector.Plo
include ./$(DEPDIR)/scratchCPU.Plo
include ./$(DEPDIR)/scratchpad.Plo
include ./$(DEPDIR)/streamCPU.Plo
include ./$(DEPDIR)/trivialCPU.Plo
include Sieve/$(DEPDIR)/broadcastShim.Plo
include Sieve/$(DEPDIR)/sieveController.Plo
include Sieve/$(DEPDIR)/sieveFactory.Plo
include membackend/$(DEPDIR)/MessierBackend.Plo
include membackend/$(DEPDIR)/cramSimBackend.Plo
include membackend/$(DEPDIR)/delayBuffer.Plo
include membackend/$(DEPDIR)/dramSimBackend.Plo
include membackend/$(DEPDIR)/flashSimBackend.Plo
include membackend/$(DEPDIR)/goblinHMCBackend.Plo
include membackend/$(DEPDIR)/hmcMemBackendConvertor.Plo
include membackend/$(DEPDIR)/hybridSimBackend.Plo
include membackend/$(DEPDIR)/memBackendConvertor.Plo
include membackend/$(DEPDIR)/pagedMultiBackend.Plo
include membackend/$(DEPDIR)/ramulatorBackend.Plo
include membackend/$(DEPDIR)/requestReorderByRow.Plo
include membackend/$(DEPDIR)/requestReorderSimple.Plo
include membackend/$(DEPDIR)/scratchBackendConvertor.Plo
include membackend/$(DEPDIR)/simpleDRAMBackend.Plo
include membackend/$(DEPDIR)/simpleMemBackend.Plo
include membackend/$(DEPDIR)/simpleMemBackendConvertor.Plo
include membackend/$(DEPDIR)/simpleMemScratchBackendConvertor.Plo
include membackend/$(DEPDIR)/timingDRAMBackend.Plo
include membackend/$(DEPDIR)/vaultSimBackend.Plo

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf Sieve/.libs Sieve/_libs
	-rm -rf membackend/.libs membackend/_libs
install-nobase_sstHEADERS: $(nobase_sst_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_sst_HEADERS)'; test -n "$(sstdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sstdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sstdir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(sstdir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(sstdir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(sstdir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(sstdir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_sstHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_sst_HEADERS)'; test -n "$(sstdir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(sstdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(compdir)" "$(DESTDIR)$(sstdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f Sieve/$(DEPDIR)/$(am__dirstamp)
	-rm -f Sieve/$(am__dirstamp)
	-rm -f membackend/$(DEPDIR)/$(am__dirstamp)
	-rm -f membackend/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-compLTLIBRARIES clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) Sieve/$(DEPDIR) membackend/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-compLTLIBRARIES install-nobase_sstHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) Sieve/$(DEPDIR) membackend/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-compLTLIBRARIES uninstall-nobase_sstHEADERS

.MAKE: install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-compLTLIBRARIES clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-compLTLIBRARIES install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-hook install-html install-html-am install-info \
	install-info-am install-man install-nobase_sstHEADERS \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-compLTLIBRARIES uninstall-nobase_sstHEADERS


install-exec-hook:
	$(SST_REGISTER_TOOL) DRAMSIM LIBDIR=$(DRAMSIM_LIBDIR)
	$(SST_REGISTER_TOOL) HYBRIDSIM LIBDIR=$(HYBRIDSIM_LIBDIR)
	$(SST_REGISTER_TOOL) NVDIMMSIM LIBDIR=$(NVDIMMSIM_LIBDIR)
	$(SST_REGISTER_TOOL) FDSIM LIBDIR=$(FDSIM_LIBDIR)
	$(SST_REGISTER_TOOL) GOBLIN_HMCSIM LIBDIR=$(GOBLIN_HMCSIM_LIBDIR)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
